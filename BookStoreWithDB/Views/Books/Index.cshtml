@model IEnumerable<BookStoreWithDB.Models.Book>

@{
    ViewData["Title"] = "Index";
}

<h1>List of Books</h1>

<div class="col">
    <form id="search-form" asp-controller="Books" asp-action="Search" method="get">
        <div class="form-group">
            <label for="search-input">Search:</label>
            <input type="text" class="form-control" id="search-input" name="searchTerm" placeholder="Enter Book Title" style="width: 200px;">
        </div>

    </form>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table id="books-table" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BookName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BookName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.BookId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.BookId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.BookId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#search-input").on("keyup", function () {
                var value = $(this).val().toLowerCase();
                $("#books-table tbody tr").filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
                });
            });
        });
    </script>
}
